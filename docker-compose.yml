version: "3.8"

services:
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "${MONGO_PORT}:27017"
    volumes:
      - ./mongodb_data:/data/db
    privileged: true
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    networks:
      - app-network
    healthcheck:
      test: mongosh --eval "db.adminCommand('ping')"
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: backend
    ports:
      - "${BACKEND_PORT}:8888"
    environment:
      - SPRING_DATA_MONGODB_URI=mongodb://${MONGO_USER}:${MONGO_PASSWORD}@mongodb:27017/test?authSource=admin
      - SERVER_PORT=8888
    networks:
      - app-network
    depends_on:
      mongodb:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8888/health"]
      interval: 10s
      timeout: 5s
      retries: 5
    restart: unless-stopped

  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend
    environment:
      - VUE_APP_BACKEND_URL=${BACKEND_URL}
    ports:
      - "${FRONTEND_PORT}:8080"
    networks:
      - app-network
    depends_on:
      backend:
        condition: service_healthy
    restart: unless-stopped

volumes:
  mongodb_data:
    name: mongodb_data

networks:
  app-network:
    driver: bridge
    name: textizer-network